!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t){e.exports=require("@tensorflow/tfjs")},,,,function(e,t,n){"use strict";n.r(t);var r=n(0);const o=30,a=1,s=Object(r.zeros)([a,64],"int32"),l=Object(r.zeros)([a,64],"int32"),c={" ":0,"/":1,0:2,1:3,2:4,3:5,4:6,5:7,6:8,7:9,8:10,9:11,a:12,b:13,c:14,d:15,e:16,f:17,g:18,h:19,i:20,j:21,l:22,m:23,n:24,o:25,p:26,r:27,s:28,t:29,u:30,v:31,w:32,y:33,"<unk>":34,"<pad>":35},u={0:"-",1:"0",2:"1",3:"2",4:"3",5:"4",6:"5",7:"6",8:"7",9:"8",10:"9"},i=Object.keys(c).length,f=Object.keys(u).length;let p=null;async function d(e,t){return e&&e.length>=6?new Promise(t=>{const n=function(e){e=e.toLowerCase().replace(/,/g,"").replace(/\-|\./g,"/").replace(" of "," ").replace(/([0-9])(st|nd|rd|th)/g,"$1"),console.log(`After cleaning: ${e}`),e.length>o&&(e=e.slice(0,o));let t=e.split("").map(e=>{let t=c[e];return void 0===t&&(t=c["<unk>"]),t});return e.length<o&&(t=t.concat(new Array(o-e.length).fill(c["<pad>"]))),t}(e),d=r.oneHot(r.tensor1d(n,"int32"),i),g=d.reshape([a].concat(d.shape));t(p.predict([g,s,l]).reduce((e,t)=>{const n=t.reshape([f]).argMax().get();return e+u[n]},""))}):Promise.resolve("")}onmessage=(async e=>{const t=e.data;postMessage({translating:!0});const n=await d(t);postMessage({date:n})}),async function(){postMessage({loading:!0}),p=await r.loadModel("./tfjsmodel/model.json"),postMessage({loading:!1})}()}]);